filter {

    if [type] == "eventlog" {

     # The EventReceivedTime field must contain only digits, or it is an invalid message
#    grep {
#        EventReceivedTime => "\d+"
#    	 }

    mutate {
        # Lowercase some values that are always in uppercase
        lowercase => [ "EventType", "FileName", "Hostname", "Severity", "Direction" ]
	add_field => [ "customer", "CATest" ]
    	   }

    mutate {
        # Set source to what the message says
        rename => [ "Hostname", "log_source" ]
    	   }

    date {
        # Convert timestamp from integer in UTC
        match => ["EventReceivedTime" , "UNIX"]
    	}

    mutate {
#        # Rename some fields into something more useful
      	add_field => [ "received@", "%{@timestamp}" ]
        rename => [ "Message", "message" ]
        rename => [ "Severity", "log_severity" ]
#        rename => [ "SeverityValue", "eventlog_severity_code" ]
        rename => [ "Channel", "win_channel" ]
        rename => [ "SourceName", "app_acting" ]
 #       rename => [ "SourceModuleName", "nxlog_input" ]
        rename => [ "Category", "win_category" ]
        rename => [ "EventID", "log_id" ]
        rename => [ "RecordNumber", "log_record" ]
        rename => [ "ProcessID", "app_pid" ]
        rename => [ "AccountType", "user_type" ]
        rename => [ "UserID", "user_id" ]
        rename => [ "AccountName", "user_name" ]
        rename => [ "Domain", "user_domain" ]
        rename => [ "TargetDomainName", "user_domain" ]
        rename => [ "TargetUserName", "user_name" ]
        rename => [ "SubjectDomainName", "user_domain" ]
        rename => [ "SubjectUserName", "user_name" ]
        rename => [ "TargetUserSid", "app_secid" ]
        rename => [ "DestPort", "dst_port" ]
        rename => [ "SourcePort", "src_port" ]
        rename => [ "DestAddress", "dst_ip" ]
        rename => [ "SourceAddress", "src_ip" ]
        rename => [ "Protocol", "ip_protocol" ]
        rename => [ "Application", "app_src" ]
	rename => [ "Direction" , "direction" ]
	rename => [ "ProcessName" , "app_src" ]
	rename => [ "ProcessingTimeInMilliseconds" , "app_process_time" ]
	rename => [ "DCName" , "win_domain_ctrler" ]
	rename => [ "CertificateDatabaseHash" , "app_CAcert_db_#" ]
	rename => [ "PrivateKeyUsageCount" , "app_CAcert_privkey_cnt" ]
	rename => [ "CACertificateHash" , "app_CAcert_#" ]
	rename => [ "CAPublicKeyHash" , "app_CAcert_pubkey_#" ]
	rename => [ "CACommonName", "app_src" ]
        rename => [ "AlgorithmName" , "app_CAcert_crypto" ]
        rename => [ "IpAddress", "src_ip" ]
        rename => [ "IpPort", "src_port" ]
        rename => [ "TargetInfo", "dst_srv" ]
        rename => [ "TargetServerName", "dst_srv" ]
   	 }

    if [win_category] == "Filtering Platform Packet Drop" {
        if  [direction] == "%%14592" {
       	  	      mutate { replace => ["direction", "in"] }
		      	     } # end of if
	if  [direction] == "%%14593" {
		         mutate { replace => ["direction", "out"] }
    		      	 } # end of if
	if "blocked" in [message] {
	                  mutate { add_field => ["action", "packets rejected"] }
			       } # end of if
	if "permitted" in [message] {
	                  mutate { add_field => ["action", "connection permitted"] }
			       } # end of if "permitted"

	} # end of if win_category

    if [win_category] == "Certification Services" or [win_channel] == "Application" {
       if "started" in [message] {
	                  mutate { add_field => ["action", "started"] }
			       } # end of if
       if "stopped" in [message] {
	                  mutate { add_field => ["action", "stopped"] }
			       } # end of if

	}


    mutate {
        # Remove redundant fields
        remove_field => [ "SourceModuleType", "EventTimeWritten", "EventTime", "EventReceivedTime", "EventType" ]
        remove_field => [ "SeverityValue", "SourceModuleName", "Keywords", "Task", "Opcode", "ThreadID", "ProviderGuid" ]
        remove_field => [ "Version", "OpcodeValue", "TargetLogonId", "LogonType", "TargetLogonGuid", "LogonGuid", "SubjectLogonId" ]
	remove_field => ["FilterRTID", "LayerRTID", "LayerName", "RemoteUserID", "RemoteMachineID", "ActivityID"]
	remove_field => ["OldSd", "NewSd",  "ObjectName", "ObjectType", "SubjectUserSid", "ResourceAttributes"]
	remove_field => [ "HandleId", "TransactionId", "AccessList", "AccessReason", "AccessMask"]
	remove_field => ["PrivilegeList", "RestrictedSidCount", "ResourceAttributes", "ObjectServer", "RoleSeparationEnabled"]
	remove_field => ["RelatedActivityID", "operationName", "SourceHandleId", "SourceProcessId", "TargetProcessId", "TargetHandleId"]
        remove_field => ["ProcessingMode", "SupportInfo1", "SupportInfo2"]
    	   }  # end of mutate

 }  # end of eventlog IF

} # end of filter
